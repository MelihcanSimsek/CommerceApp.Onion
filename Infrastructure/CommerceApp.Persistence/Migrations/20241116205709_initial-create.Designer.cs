// <auto-generated />
using System;
using CommerceApp.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CommerceApp.Persistence.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20241116205709_initial-create")]
    partial class initialcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("CategoriesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("CategoryProduct");
                });

            modelBuilder.Entity("CommerceApp.Domain.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2024, 11, 16, 23, 57, 9, 296, DateTimeKind.Local).AddTicks(8503),
                            IsDeleted = false,
                            Name = "Clothing, Garden & Electronics"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2024, 11, 16, 23, 57, 9, 296, DateTimeKind.Local).AddTicks(8895),
                            IsDeleted = false,
                            Name = "Sports & Grocery"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2024, 11, 16, 23, 57, 9, 296, DateTimeKind.Local).AddTicks(8920),
                            IsDeleted = true,
                            Name = "Computers, Toys & Home"
                        });
                });

            modelBuilder.Entity("CommerceApp.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2024, 11, 16, 23, 57, 9, 297, DateTimeKind.Local).AddTicks(728),
                            IsDeleted = false,
                            Name = "Electronics",
                            ParentId = 0,
                            Priority = 1
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2024, 11, 16, 23, 57, 9, 297, DateTimeKind.Local).AddTicks(731),
                            IsDeleted = false,
                            Name = "Foods",
                            ParentId = 0,
                            Priority = 2
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2024, 11, 16, 23, 57, 9, 297, DateTimeKind.Local).AddTicks(733),
                            IsDeleted = false,
                            Name = "Computer",
                            ParentId = 1,
                            Priority = 1
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2024, 11, 16, 23, 57, 9, 297, DateTimeKind.Local).AddTicks(735),
                            IsDeleted = false,
                            Name = "Meat",
                            ParentId = 2,
                            Priority = 1
                        });
                });

            modelBuilder.Entity("CommerceApp.Domain.Entities.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreationDate = new DateTime(2024, 11, 16, 23, 57, 9, 298, DateTimeKind.Local).AddTicks(4900),
                            Description = "Et delectus sapiente omnis perferendis ab saepe sit culpa exercitationem.",
                            IsDeleted = false,
                            Title = "Doloremque."
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            CreationDate = new DateTime(2024, 11, 16, 23, 57, 9, 298, DateTimeKind.Local).AddTicks(5051),
                            Description = "Dolorem velit omnis consequuntur laboriosam qui sint.",
                            IsDeleted = true,
                            Title = "Consequatur ratione."
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            CreationDate = new DateTime(2024, 11, 16, 23, 57, 9, 298, DateTimeKind.Local).AddTicks(5097),
                            Description = "Optio repellat exercitationem et est.",
                            IsDeleted = false,
                            Title = "Aut consequatur praesentium."
                        });
                });

            modelBuilder.Entity("CommerceApp.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CreationDate = new DateTime(2024, 11, 16, 23, 57, 9, 300, DateTimeKind.Local).AddTicks(1456),
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            Discount = 7.71m,
                            IsDeleted = false,
                            Price = 19.29m,
                            Title = "Refined Fresh Chair"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 3,
                            CreationDate = new DateTime(2024, 11, 16, 23, 57, 9, 300, DateTimeKind.Local).AddTicks(1551),
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            Discount = 7.56m,
                            IsDeleted = false,
                            Price = 81.76m,
                            Title = "Ergonomic Soft Towels"
                        });
                });

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.HasOne("CommerceApp.Domain.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommerceApp.Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CommerceApp.Domain.Entities.Detail", b =>
                {
                    b.HasOne("CommerceApp.Domain.Entities.Category", "Category")
                        .WithMany("Details")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CommerceApp.Domain.Entities.Product", b =>
                {
                    b.HasOne("CommerceApp.Domain.Entities.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("CommerceApp.Domain.Entities.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("CommerceApp.Domain.Entities.Category", b =>
                {
                    b.Navigation("Details");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using CommerceApp.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CommerceApp.Persistence.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20241117143821_update-v3")]
    partial class updatev3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CommerceApp.Domain.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2024, 11, 17, 17, 38, 21, 420, DateTimeKind.Local).AddTicks(6202),
                            IsDeleted = false,
                            Name = "Music, Toys & Garden"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2024, 11, 17, 17, 38, 21, 420, DateTimeKind.Local).AddTicks(6286),
                            IsDeleted = false,
                            Name = "Toys & Outdoors"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2024, 11, 17, 17, 38, 21, 420, DateTimeKind.Local).AddTicks(6302),
                            IsDeleted = true,
                            Name = "Industrial & Beauty"
                        });
                });

            modelBuilder.Entity("CommerceApp.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2024, 11, 17, 17, 38, 21, 420, DateTimeKind.Local).AddTicks(7924),
                            IsDeleted = false,
                            Name = "Electronics",
                            ParentId = 0,
                            Priority = 1
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2024, 11, 17, 17, 38, 21, 420, DateTimeKind.Local).AddTicks(7927),
                            IsDeleted = false,
                            Name = "Foods",
                            ParentId = 0,
                            Priority = 2
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2024, 11, 17, 17, 38, 21, 420, DateTimeKind.Local).AddTicks(7928),
                            IsDeleted = false,
                            Name = "Computer",
                            ParentId = 1,
                            Priority = 1
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2024, 11, 17, 17, 38, 21, 420, DateTimeKind.Local).AddTicks(7930),
                            IsDeleted = false,
                            Name = "Meat",
                            ParentId = 2,
                            Priority = 1
                        });
                });

            modelBuilder.Entity("CommerceApp.Domain.Entities.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreationDate = new DateTime(2024, 11, 17, 17, 38, 21, 422, DateTimeKind.Local).AddTicks(4653),
                            Description = "Sint illum dolor vero atque id et quia at aut.",
                            IsDeleted = false,
                            Title = "Ut."
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            CreationDate = new DateTime(2024, 11, 17, 17, 38, 21, 422, DateTimeKind.Local).AddTicks(4798),
                            Description = "Perspiciatis odit repudiandae officiis molestias deleniti repellat.",
                            IsDeleted = true,
                            Title = "Voluptatem molestiae."
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            CreationDate = new DateTime(2024, 11, 17, 17, 38, 21, 422, DateTimeKind.Local).AddTicks(4842),
                            Description = "Asperiores possimus in ad sequi.",
                            IsDeleted = false,
                            Title = "Vitae ex optio."
                        });
                });

            modelBuilder.Entity("CommerceApp.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CreationDate = new DateTime(2024, 11, 17, 17, 38, 21, 425, DateTimeKind.Local).AddTicks(1945),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            Discount = 4.97m,
                            IsDeleted = false,
                            Price = 55.31m,
                            Title = "Tasty Frozen Chips"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 3,
                            CreationDate = new DateTime(2024, 11, 17, 17, 38, 21, 425, DateTimeKind.Local).AddTicks(2052),
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            Discount = 7.98m,
                            IsDeleted = false,
                            Price = 43.82m,
                            Title = "Licensed Fresh Bacon"
                        });
                });

            modelBuilder.Entity("CommerceApp.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("CommerceApp.Domain.Entities.Detail", b =>
                {
                    b.HasOne("CommerceApp.Domain.Entities.Category", "Category")
                        .WithMany("Details")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CommerceApp.Domain.Entities.Product", b =>
                {
                    b.HasOne("CommerceApp.Domain.Entities.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("CommerceApp.Domain.Entities.ProductCategory", b =>
                {
                    b.HasOne("CommerceApp.Domain.Entities.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommerceApp.Domain.Entities.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CommerceApp.Domain.Entities.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("CommerceApp.Domain.Entities.Category", b =>
                {
                    b.Navigation("Details");

                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("CommerceApp.Domain.Entities.Product", b =>
                {
                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}

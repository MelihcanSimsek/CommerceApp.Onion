// <auto-generated />
using System;
using CommerceApp.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CommerceApp.Persistence.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20241117143410_update-product-category")]
    partial class updateproductcategory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CommerceApp.Domain.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2024, 11, 17, 17, 34, 10, 76, DateTimeKind.Local).AddTicks(3867),
                            IsDeleted = false,
                            Name = "Shoes, Sports & Industrial"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2024, 11, 17, 17, 34, 10, 76, DateTimeKind.Local).AddTicks(3977),
                            IsDeleted = false,
                            Name = "Music, Computers & Outdoors"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2024, 11, 17, 17, 34, 10, 76, DateTimeKind.Local).AddTicks(3994),
                            IsDeleted = true,
                            Name = "Tools, Computers & Tools"
                        });
                });

            modelBuilder.Entity("CommerceApp.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2024, 11, 17, 17, 34, 10, 76, DateTimeKind.Local).AddTicks(7408),
                            IsDeleted = false,
                            Name = "Electronics",
                            ParentId = 0,
                            Priority = 1
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2024, 11, 17, 17, 34, 10, 76, DateTimeKind.Local).AddTicks(7410),
                            IsDeleted = false,
                            Name = "Foods",
                            ParentId = 0,
                            Priority = 2
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2024, 11, 17, 17, 34, 10, 76, DateTimeKind.Local).AddTicks(7429),
                            IsDeleted = false,
                            Name = "Computer",
                            ParentId = 1,
                            Priority = 1
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2024, 11, 17, 17, 34, 10, 76, DateTimeKind.Local).AddTicks(7431),
                            IsDeleted = false,
                            Name = "Meat",
                            ParentId = 2,
                            Priority = 1
                        });
                });

            modelBuilder.Entity("CommerceApp.Domain.Entities.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreationDate = new DateTime(2024, 11, 17, 17, 34, 10, 78, DateTimeKind.Local).AddTicks(5244),
                            Description = "Quo et aut est at deserunt maiores dolor eum voluptatibus.",
                            IsDeleted = false,
                            Title = "Rem."
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            CreationDate = new DateTime(2024, 11, 17, 17, 34, 10, 78, DateTimeKind.Local).AddTicks(5399),
                            Description = "Cumque quia sint quasi delectus et veniam.",
                            IsDeleted = true,
                            Title = "Molestiae nihil."
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            CreationDate = new DateTime(2024, 11, 17, 17, 34, 10, 78, DateTimeKind.Local).AddTicks(5446),
                            Description = "Deserunt qui nobis voluptas voluptas.",
                            IsDeleted = false,
                            Title = "Quis earum ut."
                        });
                });

            modelBuilder.Entity("CommerceApp.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CreationDate = new DateTime(2024, 11, 17, 17, 34, 10, 81, DateTimeKind.Local).AddTicks(2889),
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            Discount = 6.04m,
                            IsDeleted = false,
                            Price = 51.19m,
                            Title = "Practical Soft Mouse"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 3,
                            CreationDate = new DateTime(2024, 11, 17, 17, 34, 10, 81, DateTimeKind.Local).AddTicks(2998),
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            Discount = 1.70m,
                            IsDeleted = false,
                            Price = 36.79m,
                            Title = "Ergonomic Frozen Pizza"
                        });
                });

            modelBuilder.Entity("CommerceApp.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("CommerceApp.Domain.Entities.Detail", b =>
                {
                    b.HasOne("CommerceApp.Domain.Entities.Category", "Category")
                        .WithMany("Details")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CommerceApp.Domain.Entities.Product", b =>
                {
                    b.HasOne("CommerceApp.Domain.Entities.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("CommerceApp.Domain.Entities.ProductCategory", b =>
                {
                    b.HasOne("CommerceApp.Domain.Entities.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommerceApp.Domain.Entities.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CommerceApp.Domain.Entities.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("CommerceApp.Domain.Entities.Category", b =>
                {
                    b.Navigation("Details");

                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("CommerceApp.Domain.Entities.Product", b =>
                {
                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
